{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Please keep in mind that this project is still in development.</p> <p>Welcome to the developer documentation of KitchenOwl. If you want to contribute or set up a self-hosted instance of KitchenOwl you're at the right place. Otherwise, you can find general information on the main website.</p> <p>Main Website Get Started with Self Hosting</p>"},{"location":"#app-install","title":"App Install","text":"<p>Get it on your favorite app store or find the current release for your operating system on the releases page. Please take a quick look at Tips &amp; Tricks to get the best experience in the app.</p> <p> </p>"},{"location":"#features","title":"Features","text":"<ul> <li>Native Mobile/Web/Desktop apps with a great design</li> <li>Add items to your shopping list and sync them in real-time with multiple users</li> <li>Partial offline support, so you don't lose track of what to buy even when there is no signal</li> <li>Manage recipes and add them to your shopping list</li> <li>Create a meal plan to always know what you'll be eating</li> <li>Manage balances and track expenses of your household</li> </ul>"},{"location":"#future-features","title":"Future Features","text":"<p>For a list of planned features check out the Project Board.</p>"},{"location":"#license","title":"\ud83d\udcdc License","text":"<p>KitchenOwl is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the AGPL-3.0 License.</p> <p>Read the License</p>"},{"location":"Tips-%26-Tricks/","title":"Quick Tips","text":"<p>There are a few hidden features in the app which might not be obvious at first.</p>"},{"location":"Tips-%26-Tricks/#item-description","title":"Item description","text":"<p>When searching for an item you can add the <code>,</code> delimiter to add descriptions directly. Did you also know that pressing enter when searching adds the first item to your shopping list?</p>"},{"location":"Tips-%26-Tricks/#recipe-description","title":"Recipe description","text":"<p>Recipes support markdown, additionally you can reference ingredients using <code>@ingredient_name</code> and the required amount is automatically added to the text.</p>"},{"location":"Tips-%26-Tricks/#more-details","title":"More details","text":"<p>Every card supports long presses to show details. So next time you look at your planned meals just long press and see how to cook it!</p> <p></p>"},{"location":"Tips-%26-Tricks/#share-to-the-app","title":"Share to the App","text":"<p>You can share recipe links to the KitchenOwl mobile app to directly add it to your recipe list.</p>"},{"location":"Tips-%26-Tricks/markdown/","title":"Markdown","text":""},{"location":"Tips-%26-Tricks/markdown/#ingredient-pill","title":"Ingredient pill","text":"<p>Ingredient pills allow you to reference ingredients from inside your recipes' description and automatically add amounts to it. It's case-insensitive and uses underscores for spaces. <pre><code>@ingredient_name\n</code></pre></p>"},{"location":"Tips-%26-Tricks/markdown/#text-formatting","title":"Text formatting","text":"<p><pre><code>**Bold text**\n</code></pre> <pre><code>_Italic text_\n</code></pre></p> <pre><code>&gt; quoted text is put inside a different colored rectangle \n</code></pre> <pre><code># Heading level 1\n## Heading level 2\n### Heading level 3\n#### Heading level 4\n</code></pre>"},{"location":"Tips-%26-Tricks/markdown/#lists","title":"Lists","text":"<p><pre><code>Bulleted list\n- aaa\n- bbb\n- ccc\n</code></pre> <pre><code>Numbered list\n1. bla bla\n2. bla bla\n3. bla bla\n</code></pre> <pre><code>Checklist\n- [ ] task\n- [ ] task\n</code></pre></p>"},{"location":"Tips-%26-Tricks/markdown/#tables","title":"Tables","text":"<pre><code>Table\n| Column_1 | Column_2 | .... | Column_n |\n| -------- | -------- | ---- | -------- |\n| Row_1    | text     | ...  | here     |\n| Row_2    | text     | ...  | here     |\n| ...      | ...      | ...  | ...      |\n| Row_n    | text     | ...  | here     |\n</code></pre>"},{"location":"reference/contributing/","title":"Contributing","text":"<p>Thanks for wanting to contribute to KitchenOwl!</p>"},{"location":"reference/contributing/#where-do-i-go-from-here","title":"Where do I go from here?","text":"<p>So you want to contribute to KitchenOwl? Great!</p> <p>If you have noticed a bug, please create an issue before starting any work on a pull request or get in contact by joining our Matrix space.</p>"},{"location":"reference/contributing/#fork-create-a-branch","title":"Fork &amp; create a branch","text":"<p>If there is something you want to fix or add, the first step is to fork the repository.  Frontend  Backend  Website</p> <p>Next is to create a new branch with an appropriate name. The general format that should be used is</p> <pre><code>git checkout -b '&lt;type&gt;/&lt;description&gt;'\n</code></pre> <p>The <code>type</code> is the same as the <code>type</code> that you will use for your commit message.</p> <p>The <code>description</code> is a descriptive summary of the change the PR will make.</p>"},{"location":"reference/contributing/#general-rules","title":"General Rules","text":"<ul> <li>All PRs should be rebased (with main) and commits squashed prior to the final merge process</li> <li>One PR per fix or feature</li> </ul>"},{"location":"reference/contributing/#setup-install","title":"Setup &amp; Install","text":"FrontendBackendDocsWebsite <ul> <li>Install flutter</li> <li>Install dependencies: <code>flutter packages get</code></li> <li>Create empty environment file: <code>touch .env</code></li> <li>Run app: <code>flutter run</code></li> </ul> <ul> <li>Create a python environment <code>python3 -m venv venv</code></li> <li>Activate your python environment <code>source venv/bin/activate</code> (environment can be deactivated with <code>deactivate</code>)</li> <li>Install dependencies <code>pip3 install -r requirements.txt</code></li> <li>Initialize/Upgrade the sqlite database with <code>flask db upgrade</code></li> <li>Run debug server with <code>python3 wsgi.py</code></li> <li>The backend should be reachable at <code>localhost:5000</code></li> </ul> <ul> <li>The docs are contained inside the frontend repository</li> <li>Install MkDocs</li> <li>Install Material for MkDocs</li> <li>Run docs: <code>mkdocs serve</code></li> </ul> <ul> <li>Install Hugo</li> <li>Run website: <code>hugo server</code></li> </ul>"},{"location":"reference/contributing/#git-commit-message-style","title":"Git Commit Message Style","text":"<p>This project uses the conventional commits format.</p> <p>Example commit messages:</p> <pre><code>chore: update gqlgen dependency to v2.6.0\ndocs(README): add new contributing section\nfix: remove debug log statements\n</code></pre>"},{"location":"reference/management/","title":"Server Management","text":"<p>To make things easier there is a script that allows you to change settings on your server and manage users and households. Just run: <pre><code>docker exec -it BACKEND_CONTAINER_NAME python manage.py\n</code></pre> Which will prompt you for what you want to do: <pre><code>Manage KitchenOwl\n---\nWhat do you want to do?\n1.  Manage users\n2.  Manage households\n3.  Import files\n4.  Run all jobs\n(q) Exit\nYour selection (q):\n</code></pre> Follow the instructions and everything should be self-explanatory. Some things that you can do with this:</p> <ul> <li>Add/Update/Remove users </li> <li>Add users to households</li> <li>Run jobs like regenerating item orderings and suggestions</li> </ul>"},{"location":"self-hosting/","title":"Getting Started","text":"<p>There are multiple ways you can install the KitchenOwl server.</p>"},{"location":"self-hosting/#official-installation","title":"Official Installation","text":"<p>The official installation method is using Docker and docker-compose:</p> <ol> <li>Download the docker-compose.yml <pre><code>version: \"3\"\nservices:\n  front:\n    image: tombursch/kitchenowl-web:latest\n    restart: unless-stopped\n    ports:\n      - \"80:80\"\n    depends_on:\n      - back\n  back:\n    image: tombursch/kitchenowl:latest\n    restart: unless-stopped\n    environment:\n      - JWT_SECRET_KEY=PLEASE_CHANGE_ME\n    volumes:\n      - kitchenowl_data:/data\n\nvolumes:\n  kitchenowl_data:\n</code></pre></li> <li>Change the default value for <code>JWT_SECRET_KEY</code></li> <li>If you change the container names, want to use PostgreSQL, or want to set other settings take a look at the advanced options</li> <li>Run <code>docker-compose up -d</code></li> </ol> <p>Important</p> <p>We recommend running KitchenOwl behind a reverse proxy with HTTPS (e.g. nginx)</p> <p>It is also important that you have HTTP Strict Transport Security enabled and the proper headers applied to your responses or you could be subject to a javascript hijack.</p> <p>Please see:</p> <ul> <li>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security</li> <li>https://www.netsparker.com/blog/web-security/http-security-headers/</li> </ul>"},{"location":"self-hosting/#community-installation-methods","title":"Community Installation Methods","text":"<p>Here is a list of community maintained install methods:</p> <ul> <li>Unraid (Source AGPL-3.0)</li> <li>Cosmos (Source AGPL-3.0)</li> <li>TrueNAS SCALE (Source BSD-3-Clause)</li> </ul>"},{"location":"self-hosting/advanced/","title":"Advanced Configuration","text":"<p>There are a few options for advanced users. Customization is done using environment variables.</p>"},{"location":"self-hosting/advanced/#tags","title":"Tags","text":"<p>There are three tags available: <code>latest</code>, <code>beta</code> and <code>dev</code>. <code>latest</code> is the most current stable release and is the default. <code>beta</code> corresponds to the most recent prerelease and might have some experimental features. The <code>dev</code> tag is directly build from the main branch and should not be used in production. Release notes can be found on the releases page.</p>"},{"location":"self-hosting/advanced/#frontend","title":"Frontend","text":"<p>Environment variables for <code>tombursch/kitchenowl-web</code>:</p> <ul> <li><code>BACK_URL</code> (default: <code>back:5000</code>): Allows to set a custom address for the backend. Needs to be an uWSGI protocol endpoint. Usually corresponds to the name and of the backend container and port <code>5000</code>.</li> </ul>"},{"location":"self-hosting/advanced/#backend","title":"Backend","text":"<p>Environment variables for <code>tombursch/kitchenowl</code>:</p> <ul> <li><code>FRONT_URL</code>: Adds allow origin CORS header for the URL.</li> <li><code>PRIVACY_POLICY_URL</code>: Allows to set a custom privacy policy for your server instance.</li> <li><code>OPEN_REGISTRATION</code> (default: <code>false</code>): If set allows anyone to create an account on your server.</li> <li><code>EMAIL_MANDATORY</code> (default: <code>false</code>): Make the email a mandatory field when registering (Only relevant if <code>OPEN_REGISTRATION</code> is set)</li> <li>Set up with a PostgreSQL database: docker-compose.yml</li> </ul> <p>Additionally, to setting these environment variables you can also override the start command to scale the backend up.  Add the following line or take a look at this exemplary docker-compose.yml file:</p> <p><pre><code>back:\n  [...]\n  command: wsgi.ini --gevent 2000 # default: 100\n  [...]\n</code></pre> Overriding the command is not recommended as we might change the underlying process in the future.</p>"},{"location":"self-hosting/migration/","title":"Migrating from Older Versions","text":""},{"location":"self-hosting/migration/#v049","title":"v0.4.9","text":"<p>The frontend is now required and using the option to use the backend as an HTTP server has been removed. </p>"},{"location":"self-hosting/migration/#v033","title":"v0.3.3","text":"<p>Starting from version 0.3.3 <code>tombursch/kitchenowl-web:latest</code> ignores the <code>front_url</code> environment variable and in most cases is not needed in <code>tombursch/kitchenowl:latest</code>.</p>"},{"location":"self-hosting/migration/#v0033","title":"v0.0.33","text":"<p>Starting from version 0.0.33 the frontend routes requests to the backend. Thus, only one port has to be accessible. However, the backend can be hosted in standalone mode as it was before (see legacy server install).</p>"}]}